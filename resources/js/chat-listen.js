// chat-listen.js

// ƒê·∫£m b·∫£o DOM ƒë√£ s·∫µn s√†ng (n·∫øu b·∫°n load file n√†y ·ªü cu·ªëi trang th√¨ c√≥ th·ªÉ b·ªè ph·∫ßn n√†y)
document.addEventListener('DOMContentLoaded', () => {
    const chatBox = document.getElementById('chat-box');
    const messagesContainer = document.getElementById('messages');

    if (!chatBox || !messagesContainer) {
        console.warn('‚ùå Chat elements not found, skipping Echo listener');
        return; // N·∫øu kh√¥ng ph·∫£i trang chat, kh√¥ng l√†m g√¨ c·∫£
    }

    const conversationId = chatBox.dataset.conversationId;

    if (!window.Echo) {
        console.error('‚ùå window.Echo ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o!');
        return;
    }

    if (!window.authUserId) {
        console.error('‚ùå window.authUserId ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p!');
        return;
    }

    console.log(`‚ñ∂Ô∏è Listening on private channel chat.${conversationId}`);

    window.Echo.private(`chat.${conversationId}`)
        .listen('.ChatSent', (e) => {
            const msg = e.message;

            // N·∫øu tin nh·∫Øn do ch√≠nh user g·ª≠i, kh√¥ng c·∫ßn hi·ªÉn th·ªã l·∫°i
            if (msg.user_id === window.authUserId) {
                console.log('üö´ Tin nh·∫Øn c·ªßa ch√≠nh m√¨nh, b·ªè qua.');
                return;
            }

            // T·∫°o ph·∫ßn t·ª≠ hi·ªÉn th·ªã tin nh·∫Øn m·ªõi
            const wrapper = document.createElement('div');
            wrapper.className = 'flex justify-start';

            const bubble = document.createElement('div');
            bubble.className = 'px-4 py-2 rounded-lg max-w-xs bg-gray-200 text-black';
            bubble.textContent = msg.content;

            wrapper.appendChild(bubble);
            messagesContainer.appendChild(wrapper);

            // Cu·ªôn xu·ªëng cu·ªëi ƒë·ªÉ hi·ªán tin nh·∫Øn m·ªõi nh·∫•t
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        });
});

name: Deploy

on:
  workflow_run:
    workflows: ['Build And Test']
    types: [completed]
    branches:
      - 'main'

permissions:
  actions: read
  contents: write
  pull-requests: write
  repository-projects: write
  id-token: write

jobs:
  merge-and-deploy:
    name: Create PR, auto-merge, and deploy
    runs-on: ubuntu-latest

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Thiết lập Git credentials
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create Pull Request from main to production
        id: create-pr
        uses: repo-sync/pull-request@v2
        with:
          source_branch: main
          destination_branch: production
          pr_title: "Merge main into production"
          pr_body: "Automated PR to merge main into production after successful Build And Test."
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug PR creation error
        if: steps.create-pr.outcome == 'failure'
        run: cat /tmp/pull-request.stderr.log

      - name: Enable auto-merge for PR
        if: steps.create-pr.outputs.pr_number
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # Dùng PAT nếu cần quyền cao hơn
          pull-request-number: ${{ steps.create-pr.outputs.pr_number }}
          merge-method: merge
          enable-if-approved: true  # Đảm bảo PR sẽ merge sau khi có approve nếu cần

      - name: Debug PR merge
        if: steps.create-pr.outputs.pr_number
        run: |
          gh pr merge -R "binhchay1/league-ms" --merge --auto "${{ steps.create-pr.outputs.pr_number }}" --verbose
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Install SSH keys
        run: |
          echo "Debug: SSH_HOST is ${{ secrets.SSH_HOST }}"
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Connect and pull production
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && git checkout production && git pull"

      - name: Composer install
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && composer install --no-ansi --no-interaction --no-progress"

      - name: Run php artisan migrate
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && php artisan migrate --force"

      - name: Restart PHP-FPM and set permissions
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "service php8.3-fpm restart && chmod -R 777 /var/run/php"

      - name: Cleanup
        run: rm -rf ~/.ssh
